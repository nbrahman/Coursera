library(swirl)
library("swirl")
install.packages("swirl")
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality,col="red",pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month, data = airquality, layout=c(5,1))
p<-xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"),local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local = TRUE)
xyplot(price~carat|color*cut, data = diamonds, strip = FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data = diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
sample(colors(),10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xCC
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
p2(2)
showMe(p2(2))
p1
?fun
?rgb
p3<-colorRampPalette(c("blue","green"))
p3<-colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,0.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(20))
image(volcano,col = pal(20))
image(volcano,col = p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot2(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom=c("point","smooth"))
qplot(hwy, data = mpg, color = drv)
qplot(y=hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom="boxplot")
qplot(drv, hwy, data = mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data = mpg, fill=drv)
qplot(disply, hwy, data = mpg, ~drv)
qplot(disply, hwy, data = mpg)
qplot(displ, hwy, data = mpg, ~drv)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth=2)
ggplot2(displ, hwy, data=mpg, geom=c("point","smooth"),facets=.~drv)
qplot(displ, hwy, data=mpg, geom=c("point","smooth"),facets=.~drv)
qplot(data=mpg, aes(displ, hwy))
qplot(data=mpg, aes("displ", "hwy"))
qplot(data=mpg)
g<-ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point(())
g+geom_point()
geom_smooth()+(g+geom_point())
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(set = "lm")
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(. ~ drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(size=4,alpha=1/2,aes(color=drv_type))
g+geom_point(size=4,alpha=1/2,aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(size=2,alpha=1/2,aes(color=drv))+geom_smooth(size=4,linetype=3, method="lm", se=FALSE)
g+geom_point(color=drv)+theme_bw(base_family = "Times")
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx, myy, type="l", ylim=c(-3.3))
plot(myx, myy, type="l", ylim=c(-3,3))
g<-ggplot(testdat, aes(x=myx, y=myy))
g+geom_line(0)
geom_line(g=0)
g+geom_line()
g+geom_line(ylim(-3,3))
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(data=mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y=Highway Mileage",title="Swirl Rules!")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut())
qplot(price, data=diamonds, binwidth=18497/30, fill=cut
)
qplot(price, data=diamonds, geom="density)"
qplot(price, data=diamonds, geom="density)"
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut
)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, method="lm")
qplot(carat, price, data=diamonds, color=cut)+geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets=.~cut)+geom_smooth(method="lm")
g<=ggplot(data=diamonds,aes(depth, price))
g<-ggplot(data=diamonds,aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat, seq(0,1,length=4), na.rm = TRUE)
cutpoints
diamonds$car2=cut(diamonds$carat, cutpoitns)
diamonds$car2=cut(diamonds$carat, cutpoints)
diamonds$car2<-cut(diamonds$carat, cutpoints)
g<-ggplot(data=diamonds,aes(depth, price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(data=diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut
)
library(swirl)
swirl()
getwd()
my_data=read.csv("./payments.csv")
str(my_data)
head (my_data)
plot (my_data$Average.Covered.Charges,my_data$Average.Total.Payments)
plot (Average.Covered.Charges,Average.Total.Payments, data=my_data)
with (my_data, plot (Average.Covered.Charges, Average.Total.Payments, col="red", xlab="Average Covered Charges", ylab="Average Total Payments", main="Comparison between Average Covered Charges and Average Total Payments"))
source("./plot1.r")
if(!exists("payments"))
source('D:/GitHubRepositories/Coursera/datasciencecoursera/Course 5 Week 1 Optional Assignment/plot1.R')
source('D:/GitHubRepositories/Coursera/datasciencecoursera/Course 5 Week 1 Optional Assignment/plot1.R')
source('D:/GitHubRepositories/Coursera/datasciencecoursera/Course 5 Week 1 Optional Assignment/plot1.R')
source('D:/GitHubRepositories/Coursera/datasciencecoursera/Course 5 Week 1 Optional Assignment/plot1.R')
setwd('D:/GitHubRepositories/Coursera/datasciencecoursera/Course 5 Week 1 Optional Assignment/')
source('D:/GitHubRepositories/Coursera/datasciencecoursera/Course 5 Week 1 Optional Assignment/plot1.R')
source('./plot1.R')
source('./plot1.R')
summary(my_Data$DRG.Definition)
summary(my_data$DRG.Definition)
summary(my_data$Provider.State)
ca_data = subset(my_data, Provider.State=="CA")
agg_data = aggregate(my_data, by=list(Provider.State, DRG.Definition), FUN=sum())
agg_data = aggregate(my_data, by=list(Provider.State, DRG.Definition), FUN="sum""
")"
agg_data = aggregate(my_data, by=list(Provider.State, DRG.Definition), FUN="sum")
agg_data = aggregate(my_data, by=list("Provider.State","DRG.Definition"), FUN="sum")
agg_data = aggregate(my_data, by=c(Provider.State, DRG.Definition), FUN="sum")
agg_data = aggregate(my_data, by=c("Provider.State", "DRG.Definition"), FUN="sum")
agg_data = aggregate(my_data, by=list(c("Provider.State", "DRG.Definition")), FUN="sum")
agg_data = aggregate(by=c("Provider.State", "DRG.Definition"), FUN="sum", data=my_data)
agg_data = aggregate(cbind(Average.Covered.Charges,Average.Total.Payments)~(Provider.State+DRG.Definition), FUN="sum", data=my_data)
agg_data
ca_data = subset(agg_data, Provider.State=="CA")
plot (ca_data$Average.Covered.Charges,ca_data$Average.Total.Payments,col=ca_data$DRG.Definition)
ca_data = subset(my_data, Provider.State=="CA")
plot (ca_data$Average.Covered.Charges,ca_data$Average.Total.Payments,col=ca_data$DRG.Definition)
barplot (ca_data$Average.Covered.Charges,ca_data$Average.Total.Payments,col=ca_data$DRG.Definition)
ca_data = subset(agg_data, Provider.State=="CA")
barplot (ca_data$Average.Covered.Charges,ca_data$Average.Total.Payments,col=ca_data$DRG.Definition)
barplot (ca_data$DRG.Definition,ca_data$Average.Total.Payments)
plot (ca_data$DRG.Definition,ca_data$Average.Total.Payments, type="l")
plot (ca_data$DRG.Definition,ca_data$Average.Total.Payments, type="b")
plot (ca_data$DRG.Definition,ca_data$Average.Total.Payments, type="b")
plot (ca_data$DRG.Definition,ca_data$Average.Total.Payments, type="l")
plot (ca_data$DRG.Definition,ca_data$Average.Total.Payments, type="l", col="red")
plot (ca_data$DRG.Definition,ca_data$Average.Total.Payments, type="l", col="red")
plot (ca_data$DRG.Definition,ca_data$Average.Total.Payments, type="l", col="red")
plot (ca_data$Average.Total.Payments, ca_data$DRG.Definition,type="l", col="red")
plot (ca_data$DRG.Definition,ca_data$Average.Total.Payments, type="l", col="red")
barplot (ca_data$Average.Covered.Charges,ca_data$Average.Total.Payments,col=ca_data$DRG.Definition)
barplot (ca_data$Average.Covered.Charges/(10^5),ca_data$Average.Total.Payments/(10^5),col=ca_data$DRG.Definition)
plot (ca_data$Average.Covered.Charges,ca_data$Average.Total.Payments,col=ca_data$DRG.Definition)
plot (ca_data$Average.Covered.Charges/(10^5),ca_data$Average.Total.Payments/(10^5),col=ca_data$DRG.Definition)
sumary(ca_data$DRG.Definition)
summary(ca_data$DRG.Definition)
legend("topright",
inset=.05,
cex = 1,
title="Legend",
ca_data$DRG.Definition,
horiz=TRUE,
lty=c(2,3),
col=ca_data$DRG.Definition
bg="grey96")
legend("topright",
inset=.05,
cex = 1,
title="Legend",
c(ca_data$DRG.Definition),
horiz=TRUE,
lty=c(2,3),
col=c(ca_data$DRG.Definition)
bg="grey96")
